---
- hosts: softserve
  gather_facts: yes
  tasks:
  - name: Disable ipv6 in eth0 config
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: ^IPV6INIT=
      line: IPV6INIT=no

  - name: Disable ipv6 in network config
    lineinfile:
      dest: /etc/sysconfig/network
      regexp: ^NETWORKING_IPV6=
      line: NETWORKING_IPV6=no

  - name: Disable ipv6 in sysctl
    sysctl:
      name: "{{ item }}"
      value: 1
      state: present
      reload: yes
    with_items:
    - net.ipv6.conf.all.disable_ipv6
    - net.ipv6.conf.default.disable_ipv6

  - name: Load kernel parameters
    command: sysctl -p

  # use "install ipv6 /bin/true", since that's what ip6tables check to see if
  # ipv6 is disabled. See reload function on /etc/init.d/ip6tables on RHEL 6.
  - name: Disable ipv6 module
    copy:
      dest: /etc/modprobe.d/ipv6.conf
      content: "options ipv6 disable=1\ninstall ipv6 /bin/true"

  - name: Clean hosts
    lineinfile:
      state: absent
      dest: /etc/hosts
      regexp: "^(10\\.|2001:|::1)"

  - name: Setup hostname
    hostname:
      name: "{{ inventory_hostname }}"

  - name: Setup hosts file so that IP is in /etc/hosts
    lineinfile:
      state: absent
      dest: /etc/hosts
      line: "127.0.0.1 {{ ansible_hostname }}"

  - name: Setup hosts file so that IP is in /etc/hosts
    lineinfile:
      state: absent
      dest: /etc/hosts
      line: "127.0.0.1 {{ inventory_hostname }}"
      insertbefore: BOF

  - name: Setup hosts file so that IP is in /etc/hosts
    lineinfile:
      state: present
      dest: /etc/hosts
      line: "{{ ansible_default_ipv4['address'] }} {{ ansible_hostname }}"
      insertbefore: BOF

  - name: Setup hosts file so that IP is in /etc/hosts
    lineinfile:
      state: present
      dest: /etc/hosts
      line: "{{ ansible_default_ipv4['address'] }} {{ inventory_hostname }}"
      insertbefore: BOF

  - name: Make sure firewalld allows traffic from the machine to itself
    firewalld:
      rich_rule: "rule family='ipv4' source address='{{ ansible_eth0['ipv4']['address'] }}' accept"
      permanent: true
      state: enabled

  - name: Make sure eth0 is enabled
    lineinfile:
      state: present
      dest: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: ^ONBOOT=
      line: ONBOOT=yes

  - name: Make sure eth1 is disabled
    lineinfile:
      state: present
      dest: /etc/sysconfig/network-scripts/ifcfg-eth1
      regexp: ^ONBOOT=
      line: ONBOOT=no
    when: ansible_eth1 is defined

  - name: Start and enable rpc-statd
    service:
      name: rpc-statd
      enabled: true
      state: started
    when: location == 'rax' or location == 'aws'

  - name: Create various directories for tests
    file:
      name: "{{ item }}"
      mode: "u=rwx,g=rx,o=rx"
      owner: jenkins
      group: jenkins
      state: directory
    with_items:
    - /var/log/glusterfs
    - /var/{% if ansible_system == 'FreeBSD'%}db{% else %}lib{% endif %}/glusterd
    - /var/run/gluster
    - /d
    - /archives
    - /d/archived_builds
    - /d/backends
    - /d/build
    - /d/logs
    - /home/jenkins/root
    - /archives/archived_builds
    - /archives/log
    - /archives/logs

  - name: Symlink /d/build to /build
    file: src=/d/build dest=/build state=link

  - name: Clone the glusterfs code
    git:
      repo: 'git://github.com/gluster/glusterfs'
      dest: '/home/centos/glusterfs'
      version: HEAD
      update: yes
      force: yes
